<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Globalization" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ output extension=".cs" #>
// Autogenerated at <#= DateTime.Now.ToString(CultureInfo.InvariantCulture) #>
// DO NOT EDIT THIS FILE CAUSE ALL CHANGES WILL BE DELETED AUTOMATICALLY
using VkNet.Model.RequestParams;

namespace VkNet.Utils
{
	partial class VkParameters
	{
<#
	var path = Path.Combine(Directory.GetParent(Host.ResolvePath("")).FullName, @"Model", "RequestParams");
	var files = Directory.GetFiles(path, "*.cs", SearchOption.AllDirectories).ToList();

	var types = new List<string>();

	foreach (var file in files)
	{
		var text = File.ReadAllText(file);
		const string pattern = @"ToVkParameters\((\w+)\s\w+\)";

		var matches = Regex.Matches(text, pattern, RegexOptions.Multiline);

		types.AddRange(matches.Cast<object>().Select(match => Regex.Replace(match.ToString(), pattern, @"$1", RegexOptions.Multiline)));
	}

	foreach (var type in types.OrderBy(s => s))
	{
#>

		public static implicit operator VkParameters(<#= type #> p)
		{
            return <#= type #>.ToVkParameters(p);
        }
<#
	}
#>
	}
}